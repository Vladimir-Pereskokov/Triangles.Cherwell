{"version":3,"sources":["C:/coding/cherwell/GeoLayout/AngClient/src/$_gendir lazy","C:/coding/cherwell/GeoLayout/AngClient/src/app/app.component.css","C:/coding/cherwell/GeoLayout/AngClient/src/app/app.component.html","C:/coding/cherwell/GeoLayout/AngClient/src/app/app.component.ts","C:/coding/cherwell/GeoLayout/AngClient/src/app/app.module.ts","C:/coding/cherwell/GeoLayout/AngClient/src/app/geo-container/geo-container.module.ts","C:/coding/cherwell/GeoLayout/AngClient/src/app/geo-layout-accessor.service.ts","C:/coding/cherwell/GeoLayout/AngClient/src/app/geo-square/geo-square.component.css","C:/coding/cherwell/GeoLayout/AngClient/src/app/geo-square/geo-square.component.html","C:/coding/cherwell/GeoLayout/AngClient/src/app/geo-square/geo-square.component.ts","C:/coding/cherwell/GeoLayout/AngClient/src/app/triangle-selector/triangle-selector.component.css","C:/coding/cherwell/GeoLayout/AngClient/src/app/triangle-selector/triangle-selector.component.html","C:/coding/cherwell/GeoLayout/AngClient/src/app/triangle-selector/triangle-selector.component.ts","C:/coding/cherwell/GeoLayout/AngClient/src/environments/environment.ts","C:/coding/cherwell/GeoLayout/AngClient/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/coding/cherwell/GeoLayout/AngClient/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".selected {\\r\\n    background-color: #CFD8DC !important;\\r\\n    color: white;\\r\\n  }\\r\\n  .geocontainers {\\r\\n    margin: 0 0 2em 0;\\r\\n    list-style-type: none;\\r\\n    padding: 0;\\r\\n    width: 36em;\\r\\n  }\\r\\n  .geocontainers li {\\r\\n    cursor: pointer;\\r\\n    position: relative;\\r\\n    left: 0;\\r\\n    background-color: #EEE;\\r\\n    margin: .5em;\\r\\n    padding: .3em 0;\\r\\n    height: 1.6em;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n  .geocontainers li.selected:hover {\\r\\n    background-color: #BBD8DC !important;\\r\\n    color: white;\\r\\n  }\\r\\n  .geocontainers li:hover {\\r\\n    color: #607D8B;\\r\\n    background-color: #DDD;\\r\\n    left: .1em;\\r\\n}\\r\\n.geocontainers .text {\\r\\n  position: relative;\\r\\n  top: -3px;\\r\\n}\\r\\n.geocontainers .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: relative;\\r\\n  left: -1px;\\r\\n  top: -4px;\\r\\n  height: 1.8em;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 4px 0 0 4px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/coding/cherwell/GeoLayout/AngClient/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<ul class=\\\"geocontainers\\\">\\n  <li *ngFor=\\\"let cont of layoutContainers\\\" \\n  [class.selected]=\\\"cont === selectedContainer\\\"\\n  (click)=\\\"onSelect(cont)\\\">{{cont.name}}</li>\\n</ul>\\n<hr />\\n<app-geo-square [container]=\\\"selectedContainer\\\"></app-geo-square>\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/coding/cherwell/GeoLayout/AngClient/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport 'rxjs/Rx';\nimport { GeoLayoutAccessorService } from './geo-layout-accessor.service';\nimport { GeoContainer } from './geo-container/geo-container.module';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Geomertical Layout Client';\n  selectedContainer: GeoContainer;\n  layoutContainers: GeoContainer[];  \n\n  constructor(private layoutSvc: GeoLayoutAccessorService) {}\n\n  ngOnInit() {\n    let subscr = this.layoutSvc.getLayoutContainers()\n    .subscribe(\n      data => {this.layoutContainers = data; \n              if (data.length > 0) this.onSelect(data[0]); \n              },\n      Error => {this.layoutContainers = []; console.error();}\n    );        \n  }  \n\n  onSelect(container: GeoContainer) { \n    this.readSegments(container); \n    this.readTriangles(container); \n  };\n\n  private readTriangles(value: GeoContainer) {\n    if (!value.triangles || value.triangles.length === 0) {\n      let asyTriangles = this.layoutSvc.getContainerTriangles(value.index)\n      .subscribe(\n        data => {value.triangles = data; this.selectedContainer = value;},\n        Error => {value.triangles = []}    \n      );\n    }\n    else this.selectedContainer = value;\n  }\n\n  private readSegments(value: GeoContainer) {\n    if (!value.gridlines || value.gridlines.length === 0) {\n        let asySegments = this.layoutSvc.getContainerGridSegments(value.index)\n        .subscribe(\n        data => {value.gridlines = data;},\n        Error => {value.gridlines = []}      \n      );\n    }    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/coding/cherwell/GeoLayout/AngClient/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { GeoLayoutAccessorService } from './geo-layout-accessor.service';\nimport { GeoSquareComponent } from './geo-square/geo-square.component';\nimport { TriangleSelectorComponent } from './triangle-selector/triangle-selector.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GeoSquareComponent,\n    TriangleSelectorComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [HttpClient, GeoLayoutAccessorService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n  \n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/coding/cherwell/GeoLayout/AngClient/src/app/app.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: []\n})\nexport class GeoContainer {  \n  public index: number = 0;\n  public name: string;\n  public height: number;\n  public width: number;\n  public triangles: TriangleInfo[] = [];\n  public gridlines: GridSegment[] = [];\n}\nexport class TriangleInfo {\n  public containerIdx: number = 0;\n  public address: string;\n  public ax: number;\n  public ay: number;\n  public bx: number;\n  public by: number;\n  public cx: number;\n  public cy: number;\n}\n\n\nexport class GridSegment {  \n  public ax: number;\n  public ay: number;\n  public bx: number;\n  public by: number;\n  public isCellSegment: boolean;\n}\n\n\nexport class TriangleLocation {\n\n  public row: number = 0;\n  public column: number = 0;\n  public address: number = 0;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/coding/cherwell/GeoLayout/AngClient/src/app/geo-container/geo-container.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { GeoContainer, GridSegment, TriangleInfo, TriangleLocation } from './geo-container/geo-container.module';\n\n\n@Injectable()\nexport class GeoLayoutAccessorService {  \n  constructor(private http:  HttpClient) {}  \n  \n  private readonly geoLayoutBaseUrl: string = 'http://localhost:5000/api';\n  private get ContainersUrl(): string  {\n        return this.geoLayoutBaseUrl + '/containers';\n    }\n  \n  private getContainersUrl(containerIdx : number) {\n    return this.ContainersUrl + '/' + containerIdx;\n  }\n\n  private getGridSegmentsUrl(containerIdx : number) {\n    return this.geoLayoutBaseUrl + '/gridsegments/' + containerIdx;\n  }\n\n\n  private getTrianglesUrl(containerIdx : number) {\n    return this.geoLayoutBaseUrl + '/triangles/' + containerIdx;\n  }\n\n  private getTriangleAddressUrl(containerIdx : number, address: string) {\n    return this.getTrianglesUrl(containerIdx) + '/' + address;\n  }\n\n  private getLocationUrl(triangle: TriangleInfo) {\n    return this.geoLayoutBaseUrl + '/locations/' + \n      triangle.containerIdx + '/triangle/' + triangle.ax + '/' + \n      triangle.ay + '/' + triangle.bx + '/' + triangle.by + '/' +\n      triangle.cx + '/' + triangle.cy;\n  }\n\n  public getLayoutContainers(): Observable<GeoContainer[]> {    \n    return this.http.get<GeoContainer[]>(this.ContainersUrl)\n      .pipe (\n          catchError(this.handleError('getGeoContainers', [])) \n      )      \n      ;  \n  }\n\n\n  public getContainerGridSegments(containerIdx: number): Observable<GridSegment[]> {    \n    return this.http.get<GridSegment[]>(this.getGridSegmentsUrl(containerIdx))\n      .pipe (\n          catchError(this.handleError('getContainerGridSegments', [])) \n      )      \n      ;  \n  }\n\n\n  public getContainerTriangles(containerIdx: number): Observable<TriangleInfo[]> {    \n    return this.http.get<TriangleInfo[]>(this.getTrianglesUrl(containerIdx))\n      .pipe (\n          catchError(this.handleError('getContainerTriangles', [])) \n      )      \n      ;  \n  }\n\n\n  public getTriangleAtAddress(containerIdx: number, address: string): Observable<TriangleInfo> {\n      return this.http.get<TriangleInfo>(this.getTriangleAddressUrl(containerIdx, address))\n      .pipe (\n        catchError(this.handleError('getTriangleAtAddress', null)) \n      );\n  }\n\n  public getTriangleLocation(triangle : TriangleInfo): Observable<TriangleLocation> {\n    return this.http.get<TriangleInfo>(this.getLocationUrl(triangle))\n    .pipe (\n      catchError(this.handleError('getTriangleLocation', null)) \n    );\n}\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> =>{\n      console.error('An error occurred', error);\n      return of(result as T);\n    };\n\n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/coding/cherwell/GeoLayout/AngClient/src/app/geo-layout-accessor.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"svg > poligon:hover { fill: #5214e0; }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/coding/cherwell/GeoLayout/AngClient/src/app/geo-square/geo-square.component.css\n// module id = ../../../../../src/app/geo-square/geo-square.component.css\n// module chunks = main","module.exports = \"\\n<table>\\n  <tbody>\\n    <tr>\\n      <td>\\n          <div *ngIf=\\\"triangles.length > 0\\\">  \\n              <svg attr.height=\\\"{{container.height}}\\\" attr.width=\\\"{{container.width}}\\\">\\n                      <polygon *ngFor=\\\"let t of triangles;\\\" \\n                      attr.points=\\\"{{t.ax}},{{t.ay}} {{t.bx}},{{t.by}} {{t.cx}},{{t.cy}}\\\"\\n                      style=\\\"stroke: #54523F; stroke-width:1; fill:#EBE3C5\\\" \\n                      (click)=\\\"onSelectTriangle(t)\\\"/>\\n              </svg>            \\n          </div>\\n          <label for=\\\"address\\\">Current triangle:</label><strong id=\\\"address\\\">{{currentTriangle.address}}</strong>\\n      </td>\\n      <td>\\n          <app-triangle-selector [gridLines]=\\\"segments\\\" [container]=\\\"container\\\" [triangle]=\\\"currentTriangle\\\"></app-triangle-selector>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/coding/cherwell/GeoLayout/AngClient/src/app/geo-square/geo-square.component.html\n// module id = ../../../../../src/app/geo-square/geo-square.component.html\n// module chunks = main","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs/observable';\nimport { of } from 'rxjs/observable/of';\n//import 'rxjs/Rx';\nimport { GeoLayoutAccessorService } from '../geo-layout-accessor.service';\nimport { GeoContainer, GridSegment, TriangleInfo } from '../geo-container/geo-container.module';\n\n@Component({\n  selector: 'app-geo-square',\n  templateUrl: './geo-square.component.html',\n  styleUrls: ['./geo-square.component.css']\n})\nexport class GeoSquareComponent implements OnInit {\n  \n  constructor(private layoutSvc: GeoLayoutAccessorService) {}  \n  private _cont: GeoContainer;\n  segments: GridSegment[] = [];\n  triangles: TriangleInfo[] = [];\n  currentTriangle: TriangleInfo;\n\n  //asySegments: Observable<GridSegment[]>;\n  //asyTriangles: Observable<TriangleInfo[]>;\n\n\n  @Input() set container(value: GeoContainer) {    \n    this.triangles = value.triangles;\n    this.segments = value.gridlines;\n    //this.readSegments(value);\n    this._cont = value;      \n  }\n  get container() : GeoContainer {return this._cont;}\n\n  \n  \n\n  onSelectTriangle(value: TriangleInfo) {\n    this.currentTriangle = value;\n  }\n\n  ngOnInit() {    \n  }  \n\n  ngOnDestroy() {  \n    //this.asySegments.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/coding/cherwell/GeoLayout/AngClient/src/app/geo-square/geo-square.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/coding/cherwell/GeoLayout/AngClient/src/app/triangle-selector/triangle-selector.component.css\n// module id = ../../../../../src/app/triangle-selector/triangle-selector.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"gridlines.length > 0\\\">  \\n    <svg attr.height=\\\"{{container.height}}\\\" attr.width=\\\"{{container.width}}\\\">\\n            <line *ngFor=\\\"let g of gridlines;\\\"\\n            attr.x1=\\\"g.ax\\\" attr.x2=\\\"g.ay\\\" attr.y1=\\\"g.bx\\\" attr.y2=\\\"g.by\\\"            \\n            style=\\\"stroke: #000000; stroke-width:1\\\" />\\n            <polygon *ngIf=\\\"triangle\\\" \\n                      attr.points=\\\"{{triangle.ax}},{{triangle.ay}} {{triangle.bx}},{{triangle.by}} {{triangle.cx}},{{triangle.cy}}\\\"\\n                      style=\\\"stroke: rgb(32, 3, 136); stroke-width:1; fill:rgb(32, 3, 136)\\\"\\n                      (click)=\\\"onGetAddress()\\\"/>\\n    </svg>            \\n</div>\\n<label for=\\\"location\\\">Location:</label><strong id=\\\"location\\\">{{location.address}} ({{location.row}}, {{location.column}}) </strong>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/coding/cherwell/GeoLayout/AngClient/src/app/triangle-selector/triangle-selector.component.html\n// module id = ../../../../../src/app/triangle-selector/triangle-selector.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport 'rxjs/Rx';\nimport { GeoLayoutAccessorService } from '../geo-layout-accessor.service';\nimport { TriangleInfo, GridSegment, TriangleLocation, GeoContainer } from '../geo-container/geo-container.module';\n\n@Component({\n  selector: 'app-triangle-selector',\n  templateUrl: './triangle-selector.component.html',\n  styleUrls: ['./triangle-selector.component.css']\n})\nexport class TriangleSelectorComponent implements OnInit {\n\n  constructor(private layoutSvc: GeoLayoutAccessorService) {}\n  private _grdlines: GridSegment[];\n  @Input() triangle: TriangleInfo;\n  @Input() container: GeoContainer;\n  get gridlines(): GridSegment[] {\n    if (this._grdlines) return this._grdlines;\n    else if (this.container) return this.container.gridlines;\n    else return [];\n  }\n  @Input() set gridLines(value: GridSegment[]) {\n    this._grdlines = value;\n  }\n  location: TriangleLocation;\n\n  onGetAddress() {\n    if (this.container && this.triangle) {\n      let asyTr = this.layoutSvc.getTriangleLocation(this.triangle)\n      .subscribe(\n      data => {this.location = data;},\n      Error => {location = null;}      \n      );\n    }    \n  }  \n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/coding/cherwell/GeoLayout/AngClient/src/app/triangle-selector/triangle-selector.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/coding/cherwell/GeoLayout/AngClient/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/coding/cherwell/GeoLayout/AngClient/src/main.ts"],"sourceRoot":"webpack:///"}